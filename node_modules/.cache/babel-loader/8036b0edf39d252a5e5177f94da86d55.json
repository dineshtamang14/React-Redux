{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    userInfo: {\n      name: \"dinesh tamang\",\n      email: \"dinesh@gmail.com\"\n    }\n  },\n  pending: false,\n  error: false,\n  reducers: {\n    updateStart: state => {\n      state.pending = true;\n    },\n    updateSuccess: (state, action) => {\n      state.pending = false;\n      state.userInfo = action.payload;\n    },\n    updateError: state => {\n      state.error = true;\n      state.pending = false;\n    }\n  }\n});\nexport const {\n  update,\n  remove\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/home/dinesh/Desktop/react projects/initialTemplate/src/redux/userSlice.js"],"names":["createSlice","userSlice","name","initialState","userInfo","email","pending","error","reducers","updateStart","state","updateSuccess","action","payload","updateError","update","remove","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE;AACNF,MAAAA,IAAI,EAAE,eADA;AAENG,MAAAA,KAAK,EAAE;AAFD;AADA,GAFmB;AAQjCC,EAAAA,OAAO,EAAE,KARwB;AASjCC,EAAAA,KAAK,EAAE,KAT0B;AAUjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAGC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHK;AAINK,IAAAA,aAAa,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC9BF,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACN,QAAN,GAAiBQ,MAAM,CAACC,OAAxB;AACH,KAPK;AAQNC,IAAAA,WAAW,EAAGJ,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACAG,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACH;AAXK;AAVuB,CAAD,CAA7B;AAyBP,OAAO,MAAM;AAAES,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAqBf,SAAS,CAACgB,OAArC;AACP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n    name: \"user\",\n    initialState: {\n        userInfo: {\n            name: \"dinesh tamang\",\n            email: \"dinesh@gmail.com\",\n        }\n    },\n    pending: false,\n    error: false,\n    reducers: {\n        updateStart: (state) => {\n            state.pending = true;\n        },\n        updateSuccess: (state, action) => {\n            state.pending = false;\n            state.userInfo = action.payload;\n        },\n        updateError: (state) => {\n            state.error = true;\n            state.pending = false;\n        }\n    },\n});\n\nexport const { update, remove } = userSlice.actions;\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}